# -*- coding: utf-8 -*-
# Copyright (C) 2015 Akretion France (www.akretion.com)
# @author: Alexis de Lattre <alexis.delattre@akretion.com>
# The licence is in the file __openerp__.py

-
  Print demo customer invoice n°1 to 5
-
  !python {model: account.invoice}: |
    inv_xmlids = [
        'account.invoice_1',
        'account.invoice_2',
        'account.invoice_3',
        'account.invoice_4',
        'account.invoice_5',
        ]
    for invoice_xmlid in inv_xmlids:
        invoice_id = self.pool['ir.model.data'].xmlid_to_res_id(
            cr, uid, invoice_xmlid, raise_if_not_found=True)
        pdf_content = self.pool['report'].get_pdf(
            cr, uid, [invoice_id], 'account.report_invoice', context=context)
        assert self.pdf_is_zugferd(
            cr, uid, pdf_content, context=context) == True,\
                'The generated PDF is NOT ZUGFeRD'
-
  Deeper test of the demo customer invoice n°3
-
  !python {model: account.invoice, id: account.invoice_3}: |
    import PyPDF2
    from lxml import etree
    from StringIO import StringIO
    pdf_content = self.pool['report'].get_pdf(
        self._cr, self._uid, self.ids, 'account.report_invoice')
    fd = StringIO(pdf_content)
    pdf = PyPDF2.PdfFileReader(fd)
    pdf_root = pdf.trailer['/Root']
    embeddedfile = pdf_root['/Names']['/EmbeddedFiles']['/Names']
    assert embeddedfile[0] == 'ZUGFeRD-invoice.xml',\
        'Could not find any embedded file named ZUGFeRD-invoice.xml'
    zugferd_file_dict_obj = embeddedfile[1]
    zugferd_file_dict = zugferd_file_dict_obj.getObject()
    xml_string = zugferd_file_dict['/EF']['/F'].getData()
    xml_root = etree.fromstring(xml_string)
    assert xml_root.tag.startswith(
        '{urn:ferd:CrossIndustryDocument:invoice:1p0'),\
            'Could not find the proper header in the ZUGFeRD XML file'
